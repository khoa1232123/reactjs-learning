{"version":3,"sources":["helpers/index.jsx","views/khambenh/Khoa/ModalKhoa.jsx","views/khambenh/Khoa/index.jsx"],"names":["randomMaso","prefix","random","Math","floor","replace","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","ModalKhoa","modal","setModal","oldKhoa","dispatch","useDispatch","useEffect","getKhoas","useState","khoa","setKhoa","closeModal","show","onClose","closeButton","action","method","className","row","md","htmlFor","xs","id","name","placeholder","value","ten","onChange","e","console","log","target","color","onClick","Object","keys","createKhoa","updateKhoa","Khoa","setOldKhoa","khoas","useSelector","state","lg","style","display","justifyContent","alignItems","items","fields","striped","itemsPerPage","pagination","scopedSlots","item","mso","actions","handleUpdate","window","confirm","deleteKhoa","handleDelete"],"mappings":"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","file":"static/js/37.706d27bc.chunk.js","sourcesContent":["const randomMaso = (prefix) => {\r\n  let random = Math.floor(Math.random() * 999999) + 1000001;\r\n  random = random + \"\";\r\n  let del_str = random.replace(\"1\", \"\");\r\n  return prefix + del_str;\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [day, month, year].join(\" - \");\r\n};\r\n\r\nconst renderGioitinh = () => {\r\n  var data = [];\r\n  data.push(<option value=\"\">--Select Options--</option>);\r\n  data.push(<option value=\"nam\">Nam</option>);\r\n  data.push(<option value=\"nu\">Nữ</option>);\r\n  data.push(<option value=\"khac\">Khác</option>);\r\n\r\n  return data;\r\n};\r\n\r\nexport { randomMaso, formatDate, renderGioitinh };\r\n","import {\r\n  CButton,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n} from \"@coreui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { randomMaso } from \"src/helpers\";\r\nimport { getKhoas, createKhoa, updateKhoa } from \"src/redux/action-creators\";\r\n\r\nconst ModalKhoa = ({ modal, setModal, oldKhoa }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getKhoas());\r\n  }, [dispatch]);\r\n\r\n  const [khoa, setKhoa] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e);\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setKhoa({ ...khoa, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (oldKhoa) {\r\n      setKhoa(oldKhoa);\r\n    }\r\n  }, [oldKhoa]);\r\n\r\n  const handleClick = () => {\r\n    console.log({ khoa, oldKhoa });\r\n    if (khoa.ten !== \"\") {\r\n      if (Object.keys(oldKhoa).length === 0) {\r\n        khoa[\"mso\"] = randomMaso(\"ka\");\r\n\r\n        dispatch(createKhoa(khoa));\r\n      } else {\r\n        dispatch(updateKhoa(khoa));\r\n      }\r\n      setKhoa({});\r\n      setModal(false);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setKhoa({});\r\n    setModal(false);\r\n  };\r\n\r\n  return (\r\n    <CModal show={modal} onClose={closeModal}>\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Update Khoa</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"text-input\">Title</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CInput\r\n                id=\"ten\"\r\n                name=\"ten\"\r\n                placeholder=\"Tên Khoa\"\r\n                value={khoa.ten || \"\"}\r\n                onChange={handleChange}\r\n              />\r\n            </CCol>\r\n          </CFormGroup>\r\n        </CForm>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"primary\" onClick={handleClick}>\r\n          Do Something\r\n        </CButton>{\" \"}\r\n        <CButton color=\"secondary\" onClick={closeModal}>\r\n          Cancel\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default ModalKhoa;\r\n","import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getKhoas, deleteKhoa } from \"src/redux/action-creators\";\r\nimport ModalKhoa from \"./ModalKhoa\";\r\n\r\nconst Khoa = () => {\r\n  const dispatch = useDispatch();\r\n  const [oldKhoa, setOldKhoa] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const { khoas } = useSelector((state) => state.khoa);\r\n\r\n  useEffect(() => {\r\n    dispatch(getKhoas());\r\n  }, [dispatch]);\r\n\r\n  const handleUpdate = (item) => {\r\n    setOldKhoa(item);\r\n    setModal(true);\r\n  };\r\n\r\n  const handleDelete = (item) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteKhoa(item));\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  console.log(khoas);\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n            <CCardHeader\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <span>Posts</span>\r\n              <CButton color=\"success\" onClick={handleClick}>\r\n                Add Post\r\n              </CButton>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={khoas}\r\n                fields={[\"_id\", \"Mã Số\", \"ten\", \"actions\"]}\r\n                striped\r\n                itemsPerPage={10}\r\n                pagination\r\n                scopedSlots={{\r\n                  \"Mã Số\": (item) => <td>{item.mso}</td>,\r\n                  ten: (item) => <td>{item.ten}</td>,\r\n                  actions: (item) => (\r\n                    <td>\r\n                      <CButton\r\n                        color=\"warning\"\r\n                        onClick={(e) => handleUpdate(item)}\r\n                      >\r\n                        Edit\r\n                      </CButton>{\" \"}\r\n                      <CButton\r\n                        color=\"danger\"\r\n                        onClick={(e) => handleDelete(item)}\r\n                      >\r\n                        Delete\r\n                      </CButton>\r\n                    </td>\r\n                  ),\r\n                }}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <ModalKhoa modal={modal} setModal={setModal} oldKhoa={oldKhoa} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Khoa;\r\n"],"sourceRoot":""}